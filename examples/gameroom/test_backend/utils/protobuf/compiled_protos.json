{
  "nested": {
    "SplinterNode": {
      "fields": {
        "nodeId": {
          "type": "string",
          "id": 1
        },
        "endpoints": {
          "rule": "repeated",
          "type": "string",
          "id": 2
        }
      }
    },
    "SplinterService": {
      "fields": {
        "serviceId": {
          "type": "string",
          "id": 1
        },
        "serviceType": {
          "type": "string",
          "id": 2
        },
        "allowedNodes": {
          "rule": "repeated",
          "type": "string",
          "id": 3
        },
        "arguments": {
          "rule": "repeated",
          "type": "Argument",
          "id": 4
        }
      },
      "nested": {
        "Argument": {
          "fields": {
            "key": {
              "type": "string",
              "id": 1
            },
            "value": {
              "type": "string",
              "id": 2
            }
          }
        }
      }
    },
    "Circuit": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "roster": {
          "rule": "repeated",
          "type": "SplinterService",
          "id": 2
        },
        "members": {
          "rule": "repeated",
          "type": "SplinterNode",
          "id": 3
        },
        "authorizationType": {
          "type": "AuthorizationType",
          "id": 4
        },
        "persistence": {
          "type": "PersistenceType",
          "id": 5
        },
        "durability": {
          "type": "DurabilityType",
          "id": 6
        },
        "routes": {
          "type": "RouteType",
          "id": 7
        },
        "circuitManagementType": {
          "type": "string",
          "id": 8
        },
        "applicationMetadata": {
          "type": "bytes",
          "id": 9
        },
        "comments": {
          "type": "string",
          "id": 10
        }
      },
      "nested": {
        "AuthorizationType": {
          "values": {
            "UNSET_AUTHORIZATION_TYPE": 0,
            "TRUST_AUTHORIZATION": 1
          }
        },
        "PersistenceType": {
          "values": {
            "UNSET_PERSISTENCE_TYPE": 0,
            "ANY_PERSISTENCE": 1
          }
        },
        "DurabilityType": {
          "values": {
            "UNSET_DURABILITY_TYPE": 0,
            "NO_DURABILITY": 1
          }
        },
        "RouteType": {
          "values": {
            "UNSET_ROUTE_TYPE": 0,
            "ANY_ROUTE": 1
          }
        }
      }
    },
    "CircuitProposal": {
      "fields": {
        "proposalType": {
          "type": "ProposalType",
          "id": 1
        },
        "circuitId": {
          "type": "string",
          "id": 2
        },
        "circuitHash": {
          "type": "string",
          "id": 3
        },
        "circuitProposal": {
          "type": "Circuit",
          "id": 4
        },
        "votes": {
          "rule": "repeated",
          "type": "VoteRecord",
          "id": 5
        },
        "requester": {
          "type": "bytes",
          "id": 6
        },
        "requesterNodeId": {
          "type": "string",
          "id": 7
        }
      },
      "nested": {
        "ProposalType": {
          "values": {
            "UNSET_PROPOSAL_TYPE": 0,
            "CREATE": 1,
            "UPDATE_ROSTER": 2,
            "ADD_NODE": 3,
            "REMOVE_NODE": 4,
            "DESTROY": 5
          }
        },
        "VoteRecord": {
          "fields": {
            "publicKey": {
              "type": "bytes",
              "id": 1
            },
            "vote": {
              "type": "CircuitProposalVote.Vote",
              "id": 2
            },
            "voterNodeId": {
              "type": "string",
              "id": 3
            }
          }
        }
      }
    },
    "CircuitProposalList": {
      "fields": {
        "candidates": {
          "rule": "repeated",
          "type": "CircuitProposal",
          "id": 1
        }
      }
    },
    "CircuitManagementPayload": {
      "fields": {
        "header": {
          "type": "bytes",
          "id": 1
        },
        "signature": {
          "type": "bytes",
          "id": 2
        },
        "circuitProposalVote": {
          "type": "CircuitProposalVote",
          "id": 3
        },
        "circuitCreateRequest": {
          "type": "CircuitCreateRequest",
          "id": 4
        },
        "circuitUpdateRosterRequest": {
          "type": "CircuitUpdateRosterRequest",
          "id": 5
        },
        "circuitUpdateAddNode": {
          "type": "CircuitUpdateAddNodeRequest",
          "id": 6
        },
        "circuitUpdateRemoveNode": {
          "type": "CircuitUpdateRemoveNodeRequest",
          "id": 7
        },
        "circuitUpdateApplicationMetadataRequest": {
          "type": "CircuitUpdateApplicationMetadataRequest",
          "id": 8
        },
        "circuitJoinRequest": {
          "type": "CircuitJoinRequest",
          "id": 9
        },
        "circuitDestroyRequest": {
          "type": "CircuitDestroyRequest",
          "id": 10
        },
        "circuitAbandon": {
          "type": "CircuitAbandon",
          "id": 11
        }
      },
      "nested": {
        "Action": {
          "values": {
            "ACTION_UNSET": 0,
            "CIRCUIT_PROPOSAL_VOTE": 1,
            "CIRCUIT_CREATE_REQUEST": 2,
            "CIRCUIT_UPDATE_ROSTER_REQUEST": 3,
            "CIRCUIT_UPDATE_ADD_NODE": 4,
            "CIRCUIT_UPDATE_REMOVE_NODE": 5,
            "CIRCUIT_UPDATE_APPLICATION_METADATA_REQUEST": 6,
            "CIRCUIT_JOIN_REQUEST": 7,
            "CIRCUIT_DESTROY_REQUEST": 8,
            "CIRCUIT_ABANDON": 9
          }
        },
        "Header": {
          "fields": {
            "action": {
              "type": "Action",
              "id": 1
            },
            "requester": {
              "type": "bytes",
              "id": 2
            },
            "payloadSha512": {
              "type": "bytes",
              "id": 3
            },
            "requesterNodeId": {
              "type": "string",
              "id": 4
            }
          }
        }
      }
    },
    "CircuitProposalVote": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "circuitHash": {
          "type": "string",
          "id": 2
        },
        "vote": {
          "type": "Vote",
          "id": 3
        }
      },
      "nested": {
        "Vote": {
          "values": {
            "UNSET_VOTE": 0,
            "ACCEPT": 1,
            "REJECT": 2
          }
        }
      }
    },
    "CircuitCreateRequest": {
      "fields": {
        "circuit": {
          "type": "Circuit",
          "id": 1
        }
      }
    },
    "CircuitUpdateRosterRequest": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "addServices": {
          "rule": "repeated",
          "type": "SplinterService",
          "id": 2
        },
        "removeServices": {
          "rule": "repeated",
          "type": "SplinterService",
          "id": 3
        }
      }
    },
    "CircuitUpdateAddNodeRequest": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "node": {
          "type": "SplinterNode",
          "id": 2
        }
      }
    },
    "CircuitUpdateRemoveNodeRequest": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "nodeId": {
          "type": "string",
          "id": 2
        }
      }
    },
    "CircuitUpdateApplicationMetadataRequest": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "applicationMetedata": {
          "type": "bytes",
          "id": 2
        }
      }
    },
    "CircuitJoinRequest": {
      "fields": {
        "circuit": {
          "type": "Circuit",
          "id": 1
        }
      }
    },
    "CircuitDestroyRequest": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        }
      }
    },
    "CircuitAbandon": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        }
      }
    },
    "AdminMessage": {
      "fields": {
        "messageType": {
          "type": "Type",
          "id": 1
        },
        "consensusMessage": {
          "type": "bytes",
          "id": 2
        },
        "proposedCircuit": {
          "type": "ProposedCircuit",
          "id": 3
        },
        "memberReady": {
          "type": "MemberReady",
          "id": 4
        },
        "protocolRequest": {
          "type": "ServiceProtocolVersionRequest",
          "id": 100
        },
        "protocolResponse": {
          "type": "ServiceProtocolVersionResponse",
          "id": 101
        }
      },
      "nested": {
        "Type": {
          "values": {
            "UNSET": 0,
            "CONSENSUS_MESSAGE": 1,
            "PROPOSED_CIRCUIT": 2,
            "MEMBER_READY": 3,
            "SERVICE_PROTOCOL_VERSION_REQUEST": 100,
            "SERVICE_PROTOCOL_VERSION_RESPONSE": 101
          }
        }
      }
    },
    "ProposedCircuit": {
      "fields": {
        "circuitPayload": {
          "type": "CircuitManagementPayload",
          "id": 1
        },
        "expectedHash": {
          "type": "bytes",
          "id": 2
        },
        "requiredVerifiers": {
          "type": "bytes",
          "id": 3
        }
      }
    },
    "MemberReady": {
      "fields": {
        "circuitId": {
          "type": "string",
          "id": 1
        },
        "memberNodeId": {
          "type": "string",
          "id": 2
        }
      }
    },
    "ServiceProtocolVersionRequest": {
      "fields": {
        "protocolMin": {
          "type": "uint32",
          "id": 1
        },
        "protocolMax": {
          "type": "uint32",
          "id": 2
        }
      }
    },
    "ServiceProtocolVersionResponse": {
      "fields": {
        "protocol": {
          "type": "uint32",
          "id": 1
        }
      }
    },
    "SabrePayload": {
      "fields": {
        "action": {
          "type": "Action",
          "id": 1
        },
        "createContract": {
          "type": "CreateContractAction",
          "id": 2
        },
        "deleteContract": {
          "type": "DeleteContractAction",
          "id": 3
        },
        "executeContract": {
          "type": "ExecuteContractAction",
          "id": 4
        },
        "createContractRegistry": {
          "type": "CreateContractRegistryAction",
          "id": 5
        },
        "deleteContractRegistry": {
          "type": "DeleteContractRegistryAction",
          "id": 6
        },
        "updateContractRegistryOwners": {
          "type": "UpdateContractRegistryOwnersAction",
          "id": 7
        },
        "createNamespaceRegistry": {
          "type": "CreateNamespaceRegistryAction",
          "id": 8
        },
        "deleteNamespaceRegistry": {
          "type": "DeleteNamespaceRegistryAction",
          "id": 9
        },
        "updateNamespaceRegistryOwners": {
          "type": "UpdateNamespaceRegistryOwnersAction",
          "id": 10
        },
        "createNamespaceRegistryPermission": {
          "type": "CreateNamespaceRegistryPermissionAction",
          "id": 11
        },
        "deleteNamespaceRegistryPermission": {
          "type": "DeleteNamespaceRegistryPermissionAction",
          "id": 12
        },
        "createSmartPermission": {
          "type": "CreateSmartPermissionAction",
          "id": 13
        },
        "updateSmartPermission": {
          "type": "UpdateSmartPermissionAction",
          "id": 14
        },
        "deleteSmartPermission": {
          "type": "DeleteSmartPermissionAction",
          "id": 15
        }
      },
      "nested": {
        "Action": {
          "values": {
            "ACTION_UNSET": 0,
            "CREATE_CONTRACT": 1,
            "DELETE_CONTRACT": 2,
            "EXECUTE_CONTRACT": 3,
            "CREATE_CONTRACT_REGISTRY": 4,
            "DELETE_CONTRACT_REGISTRY": 5,
            "UPDATE_CONTRACT_REGISTRY_OWNERS": 6,
            "CREATE_NAMESPACE_REGISTRY": 7,
            "DELETE_NAMESPACE_REGISTRY": 8,
            "UPDATE_NAMESPACE_REGISTRY_OWNERS": 9,
            "CREATE_NAMESPACE_REGISTRY_PERMISSION": 10,
            "DELETE_NAMESPACE_REGISTRY_PERMISSION": 11,
            "CREATE_SMART_PERMISSION": 12,
            "UPDATE_SMART_PERMISSION": 13,
            "DELETE_SMART_PERMISSION": 14
          }
        }
      }
    },
    "CreateContractAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "version": {
          "type": "string",
          "id": 2
        },
        "inputs": {
          "rule": "repeated",
          "type": "string",
          "id": 3
        },
        "outputs": {
          "rule": "repeated",
          "type": "string",
          "id": 4
        },
        "contract": {
          "type": "bytes",
          "id": 5
        }
      }
    },
    "DeleteContractAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "version": {
          "type": "string",
          "id": 2
        }
      }
    },
    "ExecuteContractAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "version": {
          "type": "string",
          "id": 2
        },
        "inputs": {
          "rule": "repeated",
          "type": "string",
          "id": 3
        },
        "outputs": {
          "rule": "repeated",
          "type": "string",
          "id": 4
        },
        "payload": {
          "type": "bytes",
          "id": 5
        }
      }
    },
    "CreateContractRegistryAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "owners": {
          "rule": "repeated",
          "type": "string",
          "id": 2
        }
      }
    },
    "DeleteContractRegistryAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        }
      }
    },
    "UpdateContractRegistryOwnersAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "owners": {
          "rule": "repeated",
          "type": "string",
          "id": 2
        }
      }
    },
    "CreateNamespaceRegistryAction": {
      "fields": {
        "namespace": {
          "type": "string",
          "id": 1
        },
        "owners": {
          "rule": "repeated",
          "type": "string",
          "id": 2
        }
      }
    },
    "DeleteNamespaceRegistryAction": {
      "fields": {
        "namespace": {
          "type": "string",
          "id": 1
        }
      }
    },
    "UpdateNamespaceRegistryOwnersAction": {
      "fields": {
        "namespace": {
          "type": "string",
          "id": 1
        },
        "owners": {
          "rule": "repeated",
          "type": "string",
          "id": 2
        }
      }
    },
    "CreateNamespaceRegistryPermissionAction": {
      "fields": {
        "namespace": {
          "type": "string",
          "id": 1
        },
        "contractName": {
          "type": "string",
          "id": 2
        },
        "read": {
          "type": "bool",
          "id": 3
        },
        "write": {
          "type": "bool",
          "id": 4
        }
      }
    },
    "DeleteNamespaceRegistryPermissionAction": {
      "fields": {
        "namespace": {
          "type": "string",
          "id": 1
        },
        "contractName": {
          "type": "string",
          "id": 2
        }
      }
    },
    "CreateSmartPermissionAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "orgId": {
          "type": "string",
          "id": 2
        },
        "function": {
          "type": "bytes",
          "id": 3
        }
      }
    },
    "UpdateSmartPermissionAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "orgId": {
          "type": "string",
          "id": 2
        },
        "function": {
          "type": "bytes",
          "id": 3
        }
      }
    },
    "DeleteSmartPermissionAction": {
      "fields": {
        "name": {
          "type": "string",
          "id": 1
        },
        "orgId": {
          "type": "string",
          "id": 2
        }
      }
    }
  }
}